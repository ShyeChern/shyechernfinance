[{"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\index.js":"1","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\reportWebVitals.js":"2","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\App.js":"3","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\constant.js":"4","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\scrollToTop.js":"5","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\LoginPage\\Login.js":"6","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\FinancePage\\Finance.js":"7","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Reuse\\PageNotFound.js":"8"},{"size":478,"mtime":1607736927961,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2179,"mtime":1607748699497,"results":"12","hashOfConfig":"10"},{"size":403,"mtime":1607783226611,"results":"13","hashOfConfig":"10"},{"size":404,"mtime":1607736790367,"results":"14","hashOfConfig":"10"},{"size":4996,"mtime":1607748742088,"results":"15","hashOfConfig":"10"},{"size":3612,"mtime":1607739682090,"results":"16","hashOfConfig":"10"},{"size":845,"mtime":1607737949277,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"bv84ge",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\index.js",[],["36","37"],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\reportWebVitals.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\App.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\constant.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\scrollToTop.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\LoginPage\\Login.js",["38"],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\FinancePage\\Finance.js",["39","40"],"import React, { useEffect, useState } from \"react\";\r\nimport { baseUrl } from \"util/constant.js\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport format from 'date-fns/format';\r\n\r\nexport default function FinancePage(props) {\r\n\r\n  const { ...rest } = props;\r\n  const [data, setData] = useState({});\r\n  const [tickerSymbol, setTickerSymbol] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // fetch(baseUrl + 'test', {\r\n    //   method: 'get',\r\n    //   headers: {\r\n    //     Accept: 'application/json',\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   // body: JSON.stringify(\"\"),\r\n    // }).then((response) => response.json())\r\n    //   .then((responseJson) => {\r\n    //     console.log(responseJson);\r\n    //     setData(responseJson)\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     alert(error);\r\n    //   });\r\n  }, []);\r\n\r\n  const getHistoricalData = () => {\r\n    // alert(tickerSymbol);\r\n    setIsLoading(true);\r\n    if (tickerSymbol === '') {\r\n      alert('input tickersymbol');\r\n      setIsLoading(false);\r\n    } else {\r\n\r\n      fetch(baseUrl, {\r\n        method: 'get',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        // body: JSON.stringify(\"\"),\r\n      }).then((response) => response.json())\r\n        .then((responseJson) => {\r\n          alert(responseJson);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const showTable = () => {\r\n    if (Object.keys(data).length !== 0 && data.constructor === Object) {\r\n      return (\r\n        <Table striped bordered hover responsive>\r\n          <thead style={{ textAlign: 'center' }}>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Price (close) * not adjusted close</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              data.prices.map((value, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{format(new Date(value.date * 1000), 'MMM dd , yyyy')}</td>\r\n                    {\r\n                      value.hasOwnProperty('close') ?\r\n                        <td>{value.close}</td>\r\n                        :\r\n                        value.type === 'DIVIDEND' ? <td>Dividend {value.amount}</td>\r\n                          :\r\n                          value.type === 'SPLIT' ? <td>Stock Split {value.splitRatio}</td>\r\n                            :\r\n                            <td>gt other value</td>\r\n                    }\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      )\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div >\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={(e) => {\r\n          e.preventDefault();\r\n          getHistoricalData();\r\n        }} >\r\n          <Form.Group controlId=\"tickerSymbol\">\r\n            <Form.Label>Ticker Symbol</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Ticker Symbol\" value={tickerSymbol} onChange={(e) => setTickerSymbol(e.target.value)} />\r\n          </Form.Group>\r\n          <Button color=\"danger\" type=\"submit\">Send Message</Button>\r\n        </Form>\r\n        {showTable()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Reuse\\PageNotFound.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"49","line":11,"column":14,"nodeType":"47","messageId":"48","endLine":11,"endColumn":18},{"ruleId":"45","severity":1,"message":"50","line":12,"column":16,"nodeType":"47","messageId":"48","endLine":12,"endColumn":23},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'rest' is assigned a value but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]