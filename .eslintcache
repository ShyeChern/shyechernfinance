[{"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\index.js":"1","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\reportWebVitals.js":"2","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\App.js":"3","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\constant.js":"4","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\scrollToTop.js":"5","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\LoginPage\\Login.js":"6","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Reuse\\PageNotFound.js":"7","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Component\\Header.js":"8","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Component\\Footer.js":"9","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\MarketPage\\Market.js":"10","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\StockPage\\Stock.js":"11","C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\NewsPage\\News.js":"12"},{"size":478,"mtime":1607736927961,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2937,"mtime":1616419606375,"results":"16","hashOfConfig":"14"},{"size":275,"mtime":1609570352596,"results":"17","hashOfConfig":"14"},{"size":404,"mtime":1607736790367,"results":"18","hashOfConfig":"14"},{"size":5123,"mtime":1622949218749,"results":"19","hashOfConfig":"14"},{"size":845,"mtime":1607737949277,"results":"20","hashOfConfig":"14"},{"size":1998,"mtime":1609042008730,"results":"21","hashOfConfig":"14"},{"size":482,"mtime":1608209047287,"results":"22","hashOfConfig":"14"},{"size":6157,"mtime":1608975264119,"results":"23","hashOfConfig":"14"},{"size":11429,"mtime":1629895298895,"results":"24","hashOfConfig":"14"},{"size":6279,"mtime":1624964435658,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"if6u72",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\index.js",[],["52","53"],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\reportWebVitals.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\App.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\constant.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\util\\scrollToTop.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\LoginPage\\Login.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Reuse\\PageNotFound.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Component\\Header.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\Component\\Footer.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\MarketPage\\Market.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\StockPage\\Stock.js",[],"C:\\Users\\chern\\Documents\\GitHub\\shyechernfinance\\src\\views\\NewsPage\\News.js",["54","55"],"import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Image, Container, Row, Col, Pagination } from 'react-bootstrap';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { baseUrl, secret } from \"util/constant.js\";\r\nimport Header from 'views/Component/Header';\r\nimport Footer from 'views/Component/Footer';\r\nimport { format } from \"date-fns\";\r\nimport noImage from \"assets/img/no-image.jpg\";\r\n\r\nexport default function News(props) {\r\n\r\n  const [instruction, setInstruction] = useState(\"Loading...\");\r\n  const [newsList, setNewsList] = useState([]);\r\n  const [maxPage, setMaxPage] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemPerPage = 10;\r\n  const { symbol } = useParams();\r\n\r\n  useEffect(() => {\r\n    getNewsList();\r\n  }, []);\r\n\r\n  const getNewsList = () => {\r\n    setInstruction('Loading...');\r\n    fetch(baseUrl + `news/getNewsList/${localStorage.getItem('scUserId')}/${symbol}`, {\r\n      method: 'get',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        authorization: 'Basic ' + secret,\r\n        timestamp: new Date().getTime(),\r\n      },\r\n      credentials: 'include'\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        return Promise.reject(res.json());\r\n      }\r\n    })\r\n      .then((resBody) => {\r\n        if (resBody.result) {\r\n          setInstruction(resBody.message);\r\n          let news = [];\r\n          resBody.data.items.result.forEach(value => {\r\n            news.push(value);\r\n          });\r\n          setMaxPage(Math.ceil(news.length / itemPerPage));\r\n          setNewsList(news);\r\n        } else {\r\n          setInstruction(resBody.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.message) {\r\n          setInstruction(error.message);\r\n        } else {\r\n          error.then(err => setInstruction(err.message));\r\n        };\r\n      });\r\n  }\r\n\r\n  const news = () => {\r\n    let startIndex = (currentPage - 1) * itemPerPage;\r\n    let news = newsList.slice(startIndex, startIndex + itemPerPage);\r\n    let returnData = news.map((value, index) => {\r\n      return (\r\n        <Row className=\"justify-content-center\" key={index} md={12} style={style.newsDiv} onClick={() => window.open(value.link, \"_blank\")}>\r\n          <Col xs={12} md={3} style={{ padding: 0 }}>\r\n            <Image src={(value.main_image == null) ? noImage : value.main_image.original_url} style={style.img} />\r\n          </Col>\r\n          <Col xs={12} md={9}>\r\n            <Row style={{ padding: 15, justifyContent: 'space-between' }}>\r\n              <p style={style.text}><b>{value.title}</b></p>\r\n              <p style={style.text}>Publisher: {value.publisher}</p>\r\n            </Row>\r\n            <p><b>[{format(new Date(value.published_at * 1000), \"dd MMM yyyy\")}]</b> {(value.summary.length > 300) ? value.summary.substring(0, 300) + '...' : value.summary}</p>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    })\r\n    return returnData;\r\n  }\r\n\r\n  const newsListPagination = () => {\r\n    if (newsList.length > 0) {\r\n      const range = 4;\r\n      const currentIndex = currentPage - 1;\r\n      let paginationItem = [];\r\n      let allowRight = 0;\r\n      let leftDot = false;\r\n      let rightDot = false;\r\n\r\n      for (let i = 0; i < maxPage; i++) {\r\n        paginationItem.push(\r\n          <Pagination.Item active={i + 1 === currentPage} key={i} onClick={() => {\r\n            setCurrentPage(i + 1)\r\n            window.scrollTo({ top: 0 });\r\n          }}>\r\n            {i + 1}\r\n          </Pagination.Item>\r\n        )\r\n      }\r\n      return (\r\n        <Row className=\"justify-content-center\">\r\n          <Pagination>\r\n            <Pagination.First onClick={() => { setCurrentPage(1) }} disabled={currentPage === 1} />\r\n            <Pagination.Prev onClick={() => { setCurrentPage(currentPage - 1) }} disabled={currentPage === 1} />\r\n            {\r\n              paginationItem.map((value, index) => {\r\n                if (index === 0 || index === maxPage - 1 || (index + range > currentIndex && index - range < currentIndex)) {\r\n                  // display first, last and range of 3 pagination item \r\n                  allowRight++;\r\n                  return value;\r\n                } else if (!leftDot && currentIndex > range) {\r\n                  // display left ellipsis after exceed the range\r\n                  // avoid repeat\r\n                  leftDot = true;\r\n                  return <Pagination.Ellipsis onClick={() => { setCurrentPage(currentPage - 3) }} />;\r\n                } else if (!rightDot && currentIndex < maxPage - range - 1 && allowRight > 1) {\r\n                  // display right ellipsis after the center pagination item displayed\r\n                  // avoid repeat\r\n                  rightDot = true;\r\n                  return <Pagination.Ellipsis onClick={() => { setCurrentPage(currentPage + 3) }} />;\r\n                }\r\n              })\r\n            }\r\n            <Pagination.Next onClick={() => { setCurrentPage(currentPage + 1) }} disabled={currentPage === maxPage} />\r\n            <Pagination.Last onClick={() => { setCurrentPage(maxPage) }} disabled={currentPage === maxPage} />\r\n          </Pagination>\r\n        </Row >\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={style.container}>\r\n      <Header role={props.role} />\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          <h3><b>{symbol}</b>&#8217;s News</h3>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Alert variant=\"warning\" transition={false} dismissible={true} show={instruction !== ''} onClose={() => setInstruction('')}>{instruction}</Alert>\r\n        </Row>\r\n        <div style={{ paddingBottom: 100 }}>\r\n          {\r\n            news()\r\n          }\r\n          {\r\n            newsListPagination()\r\n          }\r\n\r\n        </div>\r\n      </Container>\r\n      <Footer />\r\n    </div >\r\n  )\r\n}\r\n\r\nconst style = {\r\n  container: {\r\n    backgroundColor: '#fcf6f5',\r\n    minHeight: '100vh',\r\n    position: 'relative'\r\n  },\r\n  newsDiv: {\r\n    backgroundColor: '#ffded9',\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    cursor: 'pointer',\r\n  },\r\n  text: {\r\n    margin: 0\r\n  },\r\n  img: {\r\n    borderRadius: 10,\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n}\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":21,"column":6,"nodeType":"62","endLine":21,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":110,"column":49,"nodeType":"66","messageId":"67","endLine":110,"endColumn":51},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNewsList'. Either include it or remove the dependency array.","ArrayExpression",["70"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getNewsList]",{"range":"73","text":"74"},[778,780],"[getNewsList]"]